[target.thumbv7em-none-eabihf]
# Use LLD linker for faster linking on embedded targets
linker = "rust-lld"

[build]
# Set default target for this embedded project
target = "thumbv7em-none-eabihf"

# Use LLD for all targets to improve compile times (requires: brew install lld)
[target.x86_64-apple-darwin]
rustflags = ["-C", "linker=lld"]

[target.aarch64-apple-darwin]
rustflags = ["-C", "linker=lld"]

# Enable optimizations for faster dev builds
[profile.dev]
opt-level = 1
debug = true
split-debuginfo = "unpacked"

[profile.release]
opt-level = "z"     # Optimize for size
lto = true          # Enable link-time optimization
debug = true        # Keep debug info for profiling
codegen-units = 1   # Better optimization
panic = "abort"     # Smaller binary size

# Cargo aliases for building and flashing
[alias]
# Build example and convert to hex file for flashing to Teensy
hexify = "objcopy --release --example"
# Build all examples
build-examples = "build --release --examples"

# Linter configuration for embedded/no_std project
[lints.rust]
# Treat warnings as warnings, not errors (allows build to succeed)
warnings = "warn"

# Warn on static mut refs so new violations are caught
static_mut_refs = "warn"

[lints.clippy]
# Allow interior mutability pattern (UnsafeCell in DMA memory pool)
mut_from_ref = "allow"

# Documentation lints - allow for embedded projects
missing_docs = "allow"
missing_safety_doc = "allow"

# Common embedded/no_std patterns that trigger false positives
new_without_default = "allow"  # const fn can't implement Default trait
too_many_arguments = "allow"   # Hardware register APIs need many parameters
identity_op = "allow"          # Explicit register offsets for clarity
declare_interior_mutable_const = "allow"  # AtomicU32 constants in arrays

# Style lints that are too noisy for this codebase
needless_range_loop = "allow"
manual_flatten = "allow"
if_same_then_else = "allow"
collapsible_if = "allow"
manual_unwrap_or = "allow"
implicit_saturating_sub = "allow"
needless_return = "allow"
unnecessary_cast = "allow"
